name: Deploy to EC2

on:
  push:
    branches:
      - main

env:
  INSTANCE_ID: i-0515980dba1b663a2
  EC2_IP: 54.75.16.21
  AWS_REGION: eu-west-1

jobs:
  deploy:
    name: ðŸš€ Pipeline completa
    runs-on: ubuntu-latest

    steps:
      - name: Configurar AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Crear archivo de clave privada
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Iniciar instancia EC2 si es necesario
        run: |
          STATE=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query "Reservations[0].Instances[0].State.Name" \
            --output text)

          echo "Estado actual: $STATE"

          if [ "$STATE" = "stopped" ]; then
            aws ec2 start-instances --instance-ids $INSTANCE_ID
            aws ec2 wait instance-running --instance-ids $INSTANCE_ID
          elif [ "$STATE" = "stopping" ]; then
            aws ec2 wait instance-stopped --instance-ids $INSTANCE_ID
            aws ec2 start-instances --instance-ids $INSTANCE_ID
            aws ec2 wait instance-running --instance-ids $INSTANCE_ID
          elif [ "$STATE" = "pending" ]; then
            aws ec2 wait instance-running --instance-ids $INSTANCE_ID
          fi

      - name: Checkout repositorio actual
        uses: actions/checkout@v3

      - name: Clonar repositorio si no existe
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@$EC2_IP << 'EOF'
            if [ ! -d "$HOME/terraform" ]; then
              git clone https://github.com/Jose26Madrid/terraform.git ~/terraform
            else
              echo "El proyecto ya existe. No se clona."
            fi
          EOF

      - name: Ejecutar script hola mundo
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@$EC2_IP 'bash -s' < ./scripts/say_hello.sh

      - name: Detener instancia al finalizar
        if: always()
        run: |
          aws ec2 stop-instances --instance-ids $INSTANCE_ID
          aws ec2 wait instance-stopped --instance-ids $INSTANCE_ID
          echo "Instancia detenida correctamente."
